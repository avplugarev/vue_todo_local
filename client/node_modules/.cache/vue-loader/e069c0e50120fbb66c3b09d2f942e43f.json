{"remainingRequest":"/Users/nightgust/Google Drive/МГТУ/skillfactory/html/module_C_4/c_web2/client/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/nightgust/Google Drive/МГТУ/skillfactory/html/module_C_4/c_web2/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nightgust/Google Drive/МГТУ/skillfactory/html/module_C_4/c_web2/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nightgust/Google Drive/МГТУ/skillfactory/html/module_C_4/c_web2/client/src/components/Todos.vue?vue&type=template&id=d37f6326&","dependencies":[{"path":"/Users/nightgust/Google Drive/МГТУ/skillfactory/html/module_C_4/c_web2/client/src/components/Todos.vue","mtime":1573162243627},{"path":"/Users/nightgust/Google Drive/МГТУ/skillfactory/html/module_C_4/c_web2/client/node_modules/cache-loader/dist/cjs.js","mtime":1573162202513},{"path":"/Users/nightgust/Google Drive/МГТУ/skillfactory/html/module_C_4/c_web2/client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1573162211266},{"path":"/Users/nightgust/Google Drive/МГТУ/skillfactory/html/module_C_4/c_web2/client/node_modules/cache-loader/dist/cjs.js","mtime":1573162202513},{"path":"/Users/nightgust/Google Drive/МГТУ/skillfactory/html/module_C_4/c_web2/client/node_modules/vue-loader/lib/index.js","mtime":1573162211265}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}