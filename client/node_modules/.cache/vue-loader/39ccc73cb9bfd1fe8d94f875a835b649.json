{"remainingRequest":"/Users/nightgust/Google Drive/МГТУ/skillfactory/html/module_C_4/c_web2/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nightgust/Google Drive/МГТУ/skillfactory/html/module_C_4/c_web2/client/src/components/Todos.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nightgust/Google Drive/МГТУ/skillfactory/html/module_C_4/c_web2/client/src/components/Todos.vue","mtime":1573144861579},{"path":"/Users/nightgust/Google Drive/МГТУ/skillfactory/html/module_C_4/c_web2/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nightgust/Google Drive/МГТУ/skillfactory/html/module_C_4/c_web2/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nightgust/Google Drive/МГТУ/skillfactory/html/module_C_4/c_web2/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nightgust/Google Drive/МГТУ/skillfactory/html/module_C_4/c_web2/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Todos.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0HA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Todos.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"col-sm-10\">\n      <h1>Задачи</h1>\n      <confirmation :message=\"message\"\n                    v-if='showConfirmation'>\n      </confirmation>\n      <button type=\"button\"\n              id=\"task-add\"\n              class=\"btn btn-success btn-sm align-left d-block\"\n              v-b-modal.todo-modal>\n        Добавить задачу\n      </button>\n\n      <table class=\"table table-dark table-stripped table-hover\">\n\n        <thead class=\"thead-light\">\n        <tr>\n          <th>Uid</th>\n          <th>Описание</th>\n          <th>Выполнено? (Да:{{ mycounter.done }}/Нет:{{ mycounter.undone }})</th>\n          <th></th>\n        </tr>\n        </thead>\n\n        <tbody>\n        <tr v-for=\"(todo, index) in todos\" :key=\"index\">\n          <td class=\"todo-uid\">{{ todo.uid }}</td>\n          <td>{{ todo.description }}</td>\n          <td>\n            <span v-if='todo.is_completed === \"false\"'>Не выполнено</span>\n            <span v-else>Выполнено</span>\n          </td>\n          <td>\n            <div class=\"btn-group\" role=\"group\">\n              <button type=\"button\"\n                      class=\"btn btn-secondary btn-sm\"\n                      v-b-modal.todo-update-modal\n                      @click=\"updateTodo(todo)\">\n                Обновить\n              </button>\n              &nbsp;\n              <button type=\"button\"\n                      class=\"btn btn-danger btn-sm\"\n                      @click=\"deleteTodo(todo)\">\n                X\n              </button>\n            </div>\n          </td>\n        </tr>\n        </tbody>\n\n      </table>\n\n      <b-modal ref=\"addTodoModal\"\n               id=\"todo-modal\"\n               title=\"Добавить задачу\"\n               hide-footer> <!-- Теперь у нас должен наконец открываться сам модал. Обратите -->\n                <!-- внимание, что у нас в самом определении соответствующего тэга b-modal -->\n                <!-- присутствует hide-footer. Это сделано, потому что мы дополнительно -->\n                <!-- доопределяем свои кнопки. -->\n        <b-form @submit=\"onSubmit\" @reset=\"onReset\" class=\"w-100\">\n          <b-form-group id=\"form-description-group\"\n                        label=\"Описание:\"\n                        label-for=\"form-description-input\">\n            <b-form-input id=\"form-description-input\"\n                          type=\"text\"\n                          v-model=\"addTodoForm.description\"\n                          required\n                          placeholder=\"Завести задачу\">\n            </b-form-input>\n          </b-form-group>\n          <b-form-group id=\"form-complete-group\">\n            <b-form-checkbox-group>\n              <b-form-checkbox\n                id=\"form-checks\"\n                v-model=\"addTodoForm.is_completed\"\n                value='true'\n                unchecked-value='false'>\n                Задача выполнена?\n              </b-form-checkbox>\n            </b-form-checkbox-group>\n          </b-form-group>\n          <b-button type=\"submit\" variant=\"primary\">Добавить</b-button>\n          <b-button type=\"reset\" variant=\"danger\">Сброс</b-button>\n        </b-form>\n      </b-modal>\n\n      <b-modal ref=\"updateTodoModal\"\n               id=\"todo-update-modal\"\n               title=\"Update\"\n               hide-footer>\n        <b-form @submit=\"onUpdateSubmit\" @reset=\"onUpdateReset\" class=\"w-100\">\n          <b-form-group id=\"form-update-description-group\"\n                        label=\"Описание:\"\n                        label-for=\"form-update-description-input\">\n            <b-form-input id=\"form-update-description-input\"\n                          type=\"text\"\n                          v-model=\"updateTodoForm.description\"\n                          required>\n            </b-form-input>\n          </b-form-group>\n          <b-form-group id=\"form-update-complete-group\">\n            <b-form-checkbox-group v-model=\"updateTodoForm.is_completed\" id=\"form-update-checks\">\n              <b-form-checkbox\n                value='true'\n                unchecked-value='false'>\n                Задача выполнена?\n              </b-form-checkbox>\n            </b-form-checkbox-group>\n          </b-form-group>\n          <b-button-group>\n            <b-button type=\"submit\" variant=\"primary\">Обновить</b-button>\n            <b-button type=\"reset\" variant=\"danger\">Сброс</b-button>\n          </b-button-group>\n        </b-form>\n      </b-modal>\n    </div>\n  </div>\n</template>\n\n<script>\n// импортируем библиотеку для работы с http запросами\nimport Confirmation from './Confirmation.vue';\n\nclass ValidationError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = 'ValidationError';\n  }\n}\nexport default {\n  name: 'Todo',\n  data() {\n    // наш компонент возвращает в шаблон\n    return {\n      todos: [],\n      mycounter: {\n        done: 0,\n        undone: 0,\n      },\n      // определяем объект addTodoForm у которого те же поля, что и в модальном окне\n      addTodoForm: {\n        description: '',\n        // Именно объект addTodoForm используется внутри модала для привязки к модели через\n        // v-model.\n        is_completed: 'false',\n      },\n      // добавили новый объект для формы изменения задачи\n      updateTodoForm: {\n        uid: 0,\n        description: '',\n        is_completed: 'false',\n        uuid: 0,\n      },\n      message: '',\n      showConfirmation: false,\n    };\n  },\n  // вынесли логику после сreated в методы чтобы не загромомждать\n  methods: {\n    getUID() {\n      if (localStorage.getItem('counter') === null) {\n        const newuid = 0;\n        localStorage.setItem('counter', newuid);\n      } else {\n        const uid = localStorage.getItem('counter');\n        const newuid = uid * 1 + 1;\n        localStorage.setItem('counter', newuid);\n      }\n    },\n    getTodos() {\n      const tasks = [];\n      let listUid = 0;\n      let done = 0;\n      let undone = 0;\n      for (let i = 0; i < localStorage.length; i += 1) {\n        const key = localStorage.key(i);\n        if (key.indexOf('task') !== -1) {\n          const savedtask = JSON.parse(localStorage.getItem(key));\n          if (savedtask.is_completed === 'false') {\n            undone += 1;\n          } else {\n            done += 1;\n          }\n          savedtask.uid = listUid;\n          listUid += 1;\n          tasks.push(savedtask);\n        }\n      }\n      this.todos = tasks;\n      this.mycounter.done = done;\n      this.mycounter.undone = undone;\n    },\n    getTaskStatus() {\n      let done = 0;\n      let undone = 0;\n      for (let i = 0; i < localStorage.length; i += 1) {\n        const key = localStorage.key(i);\n        if (key.indexOf('task') !== -1) {\n          const task = JSON.parse(localStorage.getItem(key));\n          if (task.is_completed === 'false') {\n            undone += 1;\n          } else {\n            done += 1;\n          }\n        }\n      }\n      this.mycounter.alpha = done;\n      this.mycounter.betta = undone;\n    },\n    // сброс полей формы приводим объект addTodoForm к его изначальному состоянию.\n    resetForm() {\n      this.addTodoForm.description = '';\n      this.addTodoForm.is_completed = 'false';\n      this.getTodos();\n    },\n    resetFormUpdate() {\n      this.updateTodoForm.description = '';\n      this.updateTodoForm.is_completed = 'false';\n      this.getTodos();\n    },\n    onSubmit(event) {\n      event.preventDefault(); //  стопаем действ по умолч\n      this.$refs.addTodoModal.hide(); // скрываем форму! использовть для скрытия уведомл\n      // формируем даннные для отправки на сервер\n      if (this.addTodoForm.is_completed !== 'false') {\n        this.addTodoForm.is_completed = 'true';\n      }\n      this.getUID();\n      const mykey = 'task';\n      try {\n        const savedData = {\n          description: this.addTodoForm.description,\n          is_completed: this.addTodoForm.is_completed,\n          uid: localStorage.getItem('counter'),\n          uuid: mykey + localStorage.getItem('counter'),\n        };\n        const json = JSON.stringify(savedData);\n        savedData.uuid = mykey + savedData.uid;\n        localStorage.setItem(savedData.uuid, json);\n        this.message = 'Задача добавлена в список';\n      } catch (e) {\n        console.log(e);\n        this.message = 'Произошла ошибка. Задача не добавлена в список';\n      }\n      // приводим значения полей формы в начальное состояние\n      this.resetForm();\n      this.getTodos();\n      this.showConfirmation = true;\n      setTimeout(() => {\n        this.showConfirmation = false;\n      }, 5000);\n    },\n    onReset(event) {\n      event.preventDefault(); // первым делом отменяет действие по умолчанию для этого объекта,\n      // потому что мы сначала должны спрятать модальное окно и потом ещё сбросить форму.\n      this.$refs.addTodoModal.hide();\n      this.resetForm();\n    },\n    // обновляем объект с обновлен данныммы в новом методе updateTodo\n    updateTodo(todo) {\n      this.updateTodoForm = todo;\n    },\n    onUpdateSubmit(event) {\n      // делаем тоже самое что с сабмит просто другим методом\n      event.preventDefault();\n      this.$refs.updateTodoModal.hide();\n      if (this.addTodoForm.is_completed !== 'false') {\n        this.addTodoForm.is_completed = 'true';\n      }\n      try {\n        if (localStorage.getItem(this.updateTodoForm.uuid) === null) {\n          throw new ValidationError();\n        }\n        const savedData = {\n          description: this.updateTodoForm.description,\n          is_completed: this.updateTodoForm.is_completed,\n          uid: this.updateTodoForm.uid,\n          uuid: this.updateTodoForm.uuid,\n        };\n        const json = JSON.stringify(savedData);\n        localStorage.setItem(savedData.uuid, json);\n        this.message = 'Задача обновлена';\n      } catch (e) {\n        if (e instanceof ValidationError) {\n          console.log(e.name);\n          this.message = 'Произошла ошибка. Задача с таким номером отсутствует';\n        } else {\n          console.log(e);\n          this.message = 'Произошла ошибка во время обновления задачи';\n        }\n      }\n      this.resetFormUpdate();\n      this.getTodos();\n      this.showConfirmation = true;\n      setTimeout(() => {\n        this.showConfirmation = false;\n      }, 5000);\n    },\n    onUpdateReset(event) {\n      event.preventDefault();\n      this.$refs.updateTodoModal.hide();\n      this.resetFormUpdate();\n    },\n    deleteTodo(todo) {\n      try {\n        const toDeleteUuid = todo.uuid;\n        if (localStorage.getItem(toDeleteUuid) === null) {\n          throw new ValidationError();\n        }\n        localStorage.removeItem(toDeleteUuid);\n        this.message = 'Задача удалена из списка';\n      } catch (e) {\n        if (e instanceof ValidationError) {\n          console.log(e.name);\n          this.message = 'Произошла ошибка. Задача с таким номером отсутствует}';\n        } else {\n          console.log(e);\n          this.message = 'Произошла ошибка во время удаления задачи';\n        }\n      }\n      this.getTodos();\n      this.showConfirmation = true;\n      setTimeout(() => {\n        this.showConfirmation = false;\n      }, 5000);\n    },\n  },\n  // определяем поведение компонента при загрузке с помощью created\n  components: {\n    confirmation: Confirmation,\n  },\n  created() {\n    this.getTodos();\n  },\n};\n</script>\n\n<style>\nbutton#task-add {\n  margin-top: 20px;\n  margin-bottom: 20px;\n}\nh1, td {\n  text-align: left;\n}\n.todo-uid {\n  text-align: right;\n}\n\n</style>\n"]}]}