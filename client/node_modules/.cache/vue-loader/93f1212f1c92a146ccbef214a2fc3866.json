{"remainingRequest":"/Users/nightgust/Google Drive/МГТУ/skillfactory/html/module_C_4/c_web2/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nightgust/Google Drive/МГТУ/skillfactory/html/module_C_4/c_web2/client/src/components/Todos.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/nightgust/Google Drive/МГТУ/skillfactory/html/module_C_4/c_web2/client/src/components/Todos.vue","mtime":1572741000093},{"path":"/Users/nightgust/Google Drive/МГТУ/skillfactory/html/module_C_4/c_web2/client/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nightgust/Google Drive/МГТУ/skillfactory/html/module_C_4/c_web2/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/nightgust/Google Drive/МГТУ/skillfactory/html/module_C_4/c_web2/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/nightgust/Google Drive/МГТУ/skillfactory/html/module_C_4/c_web2/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nightgust/Google Drive/МГТУ/skillfactory/html/module_C_4/c_web2/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKYnV0dG9uI3Rhc2stYWRkIHsKICBtYXJnaW4tdG9wOiAyMHB4OwogIG1hcmdpbi1ib3R0b206IDIwcHg7Cn0KaDEsIHRkIHsKICB0ZXh0LWFsaWduOiBsZWZ0Owp9Ci50b2RvLXVpZCB7CiAgdGV4dC1hbGlnbjogcmlnaHQ7Cn0KCg=="},{"version":3,"sources":["Todos.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Todos.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"col-sm-10\">\n      <h1>Задачи</h1>\n\n      <button type=\"button\" id=\"task-add\" class=\"btn btn-success btn-sm align-left d-block\">\n        Добавить задачу\n      </button>\n\n      <table class=\"table table-dark table-stripped table-hover\">\n\n        <thead class=\"thead-light\">\n        <tr>\n          <th>Uid</th>\n          <th>Описание</th>\n          <th>Выполнена?</th>\n          <th></th>\n        </tr>\n        </thead>\n\n        <tbody>\n        <tr v-for=\"(todo, index) in todos\" :key=\"index\">\n          <td class=\"todo-uid\">{{ todo.uid }}</td>\n          <td>{{ todo.description }}</td>\n          <td>\n            <span v-if=\"todo.is_completed\">Выполнено</span>\n            <span v-else>Не выполнено</span>\n          </td>\n          <td>\n            <div class=\"btn-group\" role=\"group\">\n              <button type=\"button\" class=\"btn btn-secondary btn-sm\">Обновить</button>\n              &nbsp;\n              <button type=\"button\" class=\"btn btn-danger btn-sm\">X</button>\n            </div>\n          </td>\n        </tr>\n        </tbody>\n\n      </table>\n    </div>\n  </div>\n</template>\n\n<script>\n// импортируем библиотеку для работы с http запросами\nimport axios from 'axios';\n\nconst dataURL = 'http://localhost:5000/api/tasks/';\n\nexport default {\n  name: 'Todos',\n  data() {\n    // наш компонент возвращает в шаблон\n    return {\n      todos: [],\n    };\n  },\n  // вынесли логику после сreated в методы чтобы не загромомждать\n  methods: {\n    getTodos() {\n      axios.get(dataURL)\n        .then((response) => {\n          // по сути кладем ответ из даты ответа в todos\n          this.todos = response.data.tasks;\n        });\n    },\n  },\n  // определяем поведение компонента при загрузке с помощью created\n  created() {\n    this.getTodos();\n  },\n};\n</script>\n\n<style>\nbutton#task-add {\n  margin-top: 20px;\n  margin-bottom: 20px;\n}\nh1, td {\n  text-align: left;\n}\n.todo-uid {\n  text-align: right;\n}\n\n</style>\n"]}]}