{"remainingRequest":"/Users/nightgust/Google Drive/МГТУ/skillfactory/html/module_C_4/c_web2/client/node_modules/babel-loader/lib/index.js!/Users/nightgust/Google Drive/МГТУ/skillfactory/html/module_C_4/c_web2/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nightgust/Google Drive/МГТУ/skillfactory/html/module_C_4/c_web2/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nightgust/Google Drive/МГТУ/skillfactory/html/module_C_4/c_web2/client/src/components/Todos.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nightgust/Google Drive/МГТУ/skillfactory/html/module_C_4/c_web2/client/src/components/Todos.vue","mtime":1573144861579},{"path":"/Users/nightgust/Google Drive/МГТУ/skillfactory/html/module_C_4/c_web2/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nightgust/Google Drive/МГТУ/skillfactory/html/module_C_4/c_web2/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nightgust/Google Drive/МГТУ/skillfactory/html/module_C_4/c_web2/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nightgust/Google Drive/МГТУ/skillfactory/html/module_C_4/c_web2/client/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nightgust/Google Drive/МГТУ/skillfactory/html/module_C_4/c_web2/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nightgust/Google Drive/МГТУ/skillfactory/html/module_C_4/c_web2/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nightgust/Google Drive/МГТУ/skillfactory/html/module_C_4/c_web2/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nightgust/Google Drive/МГТУ/skillfactory/html/module_C_4/c_web2/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Todos.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"col-sm-10\">\n      <h1>Задачи</h1>\n      <confirmation :message=\"message\"\n                    v-if='showConfirmation'>\n      </confirmation>\n      <button type=\"button\"\n              id=\"task-add\"\n              class=\"btn btn-success btn-sm align-left d-block\"\n              v-b-modal.todo-modal>\n        Добавить задачу\n      </button>\n\n      <table class=\"table table-dark table-stripped table-hover\">\n\n        <thead class=\"thead-light\">\n        <tr>\n          <th>Uid</th>\n          <th>Описание</th>\n          <th>Выполнено? (Да:{{ mycounter.done }}/Нет:{{ mycounter.undone }})</th>\n          <th></th>\n        </tr>\n        </thead>\n\n        <tbody>\n        <tr v-for=\"(todo, index) in todos\" :key=\"index\">\n          <td class=\"todo-uid\">{{ todo.uid }}</td>\n          <td>{{ todo.description }}</td>\n          <td>\n            <span v-if='todo.is_completed === \"false\"'>Не выполнено</span>\n            <span v-else>Выполнено</span>\n          </td>\n          <td>\n            <div class=\"btn-group\" role=\"group\">\n              <button type=\"button\"\n                      class=\"btn btn-secondary btn-sm\"\n                      v-b-modal.todo-update-modal\n                      @click=\"updateTodo(todo)\">\n                Обновить\n              </button>\n              &nbsp;\n              <button type=\"button\"\n                      class=\"btn btn-danger btn-sm\"\n                      @click=\"deleteTodo(todo)\">\n                X\n              </button>\n            </div>\n          </td>\n        </tr>\n        </tbody>\n\n      </table>\n\n      <b-modal ref=\"addTodoModal\"\n               id=\"todo-modal\"\n               title=\"Добавить задачу\"\n               hide-footer> <!-- Теперь у нас должен наконец открываться сам модал. Обратите -->\n                <!-- внимание, что у нас в самом определении соответствующего тэга b-modal -->\n                <!-- присутствует hide-footer. Это сделано, потому что мы дополнительно -->\n                <!-- доопределяем свои кнопки. -->\n        <b-form @submit=\"onSubmit\" @reset=\"onReset\" class=\"w-100\">\n          <b-form-group id=\"form-description-group\"\n                        label=\"Описание:\"\n                        label-for=\"form-description-input\">\n            <b-form-input id=\"form-description-input\"\n                          type=\"text\"\n                          v-model=\"addTodoForm.description\"\n                          required\n                          placeholder=\"Завести задачу\">\n            </b-form-input>\n          </b-form-group>\n          <b-form-group id=\"form-complete-group\">\n            <b-form-checkbox-group>\n              <b-form-checkbox\n                id=\"form-checks\"\n                v-model=\"addTodoForm.is_completed\"\n                value='true'\n                unchecked-value='false'>\n                Задача выполнена?\n              </b-form-checkbox>\n            </b-form-checkbox-group>\n          </b-form-group>\n          <b-button type=\"submit\" variant=\"primary\">Добавить</b-button>\n          <b-button type=\"reset\" variant=\"danger\">Сброс</b-button>\n        </b-form>\n      </b-modal>\n\n      <b-modal ref=\"updateTodoModal\"\n               id=\"todo-update-modal\"\n               title=\"Update\"\n               hide-footer>\n        <b-form @submit=\"onUpdateSubmit\" @reset=\"onUpdateReset\" class=\"w-100\">\n          <b-form-group id=\"form-update-description-group\"\n                        label=\"Описание:\"\n                        label-for=\"form-update-description-input\">\n            <b-form-input id=\"form-update-description-input\"\n                          type=\"text\"\n                          v-model=\"updateTodoForm.description\"\n                          required>\n            </b-form-input>\n          </b-form-group>\n          <b-form-group id=\"form-update-complete-group\">\n            <b-form-checkbox-group v-model=\"updateTodoForm.is_completed\" id=\"form-update-checks\">\n              <b-form-checkbox\n                value='true'\n                unchecked-value='false'>\n                Задача выполнена?\n              </b-form-checkbox>\n            </b-form-checkbox-group>\n          </b-form-group>\n          <b-button-group>\n            <b-button type=\"submit\" variant=\"primary\">Обновить</b-button>\n            <b-button type=\"reset\" variant=\"danger\">Сброс</b-button>\n          </b-button-group>\n        </b-form>\n      </b-modal>\n    </div>\n  </div>\n</template>\n\n<script>\n// импортируем библиотеку для работы с http запросами\nimport Confirmation from './Confirmation.vue';\n\nclass ValidationError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = 'ValidationError';\n  }\n}\nexport default {\n  name: 'Todo',\n  data() {\n    // наш компонент возвращает в шаблон\n    return {\n      todos: [],\n      mycounter: {\n        done: 0,\n        undone: 0,\n      },\n      // определяем объект addTodoForm у которого те же поля, что и в модальном окне\n      addTodoForm: {\n        description: '',\n        // Именно объект addTodoForm используется внутри модала для привязки к модели через\n        // v-model.\n        is_completed: 'false',\n      },\n      // добавили новый объект для формы изменения задачи\n      updateTodoForm: {\n        uid: 0,\n        description: '',\n        is_completed: 'false',\n        uuid: 0,\n      },\n      message: '',\n      showConfirmation: false,\n    };\n  },\n  // вынесли логику после сreated в методы чтобы не загромомждать\n  methods: {\n    getUID() {\n      if (localStorage.getItem('counter') === null) {\n        const newuid = 0;\n        localStorage.setItem('counter', newuid);\n      } else {\n        const uid = localStorage.getItem('counter');\n        const newuid = uid * 1 + 1;\n        localStorage.setItem('counter', newuid);\n      }\n    },\n    getTodos() {\n      const tasks = [];\n      let listUid = 0;\n      let done = 0;\n      let undone = 0;\n      for (let i = 0; i < localStorage.length; i += 1) {\n        const key = localStorage.key(i);\n        if (key.indexOf('task') !== -1) {\n          const savedtask = JSON.parse(localStorage.getItem(key));\n          if (savedtask.is_completed === 'false') {\n            undone += 1;\n          } else {\n            done += 1;\n          }\n          savedtask.uid = listUid;\n          listUid += 1;\n          tasks.push(savedtask);\n        }\n      }\n      this.todos = tasks;\n      this.mycounter.done = done;\n      this.mycounter.undone = undone;\n    },\n    getTaskStatus() {\n      let done = 0;\n      let undone = 0;\n      for (let i = 0; i < localStorage.length; i += 1) {\n        const key = localStorage.key(i);\n        if (key.indexOf('task') !== -1) {\n          const task = JSON.parse(localStorage.getItem(key));\n          if (task.is_completed === 'false') {\n            undone += 1;\n          } else {\n            done += 1;\n          }\n        }\n      }\n      this.mycounter.alpha = done;\n      this.mycounter.betta = undone;\n    },\n    // сброс полей формы приводим объект addTodoForm к его изначальному состоянию.\n    resetForm() {\n      this.addTodoForm.description = '';\n      this.addTodoForm.is_completed = 'false';\n      this.getTodos();\n    },\n    resetFormUpdate() {\n      this.updateTodoForm.description = '';\n      this.updateTodoForm.is_completed = 'false';\n      this.getTodos();\n    },\n    onSubmit(event) {\n      event.preventDefault(); //  стопаем действ по умолч\n      this.$refs.addTodoModal.hide(); // скрываем форму! использовть для скрытия уведомл\n      // формируем даннные для отправки на сервер\n      if (this.addTodoForm.is_completed !== 'false') {\n        this.addTodoForm.is_completed = 'true';\n      }\n      this.getUID();\n      const mykey = 'task';\n      try {\n        const savedData = {\n          description: this.addTodoForm.description,\n          is_completed: this.addTodoForm.is_completed,\n          uid: localStorage.getItem('counter'),\n          uuid: mykey + localStorage.getItem('counter'),\n        };\n        const json = JSON.stringify(savedData);\n        savedData.uuid = mykey + savedData.uid;\n        localStorage.setItem(savedData.uuid, json);\n        this.message = 'Задача добавлена в список';\n      } catch (e) {\n        console.log(e);\n        this.message = 'Произошла ошибка. Задача не добавлена в список';\n      }\n      // приводим значения полей формы в начальное состояние\n      this.resetForm();\n      this.getTodos();\n      this.showConfirmation = true;\n      setTimeout(() => {\n        this.showConfirmation = false;\n      }, 5000);\n    },\n    onReset(event) {\n      event.preventDefault(); // первым делом отменяет действие по умолчанию для этого объекта,\n      // потому что мы сначала должны спрятать модальное окно и потом ещё сбросить форму.\n      this.$refs.addTodoModal.hide();\n      this.resetForm();\n    },\n    // обновляем объект с обновлен данныммы в новом методе updateTodo\n    updateTodo(todo) {\n      this.updateTodoForm = todo;\n    },\n    onUpdateSubmit(event) {\n      // делаем тоже самое что с сабмит просто другим методом\n      event.preventDefault();\n      this.$refs.updateTodoModal.hide();\n      if (this.addTodoForm.is_completed !== 'false') {\n        this.addTodoForm.is_completed = 'true';\n      }\n      try {\n        if (localStorage.getItem(this.updateTodoForm.uuid) === null) {\n          throw new ValidationError();\n        }\n        const savedData = {\n          description: this.updateTodoForm.description,\n          is_completed: this.updateTodoForm.is_completed,\n          uid: this.updateTodoForm.uid,\n          uuid: this.updateTodoForm.uuid,\n        };\n        const json = JSON.stringify(savedData);\n        localStorage.setItem(savedData.uuid, json);\n        this.message = 'Задача обновлена';\n      } catch (e) {\n        if (e instanceof ValidationError) {\n          console.log(e.name);\n          this.message = 'Произошла ошибка. Задача с таким номером отсутствует';\n        } else {\n          console.log(e);\n          this.message = 'Произошла ошибка во время обновления задачи';\n        }\n      }\n      this.resetFormUpdate();\n      this.getTodos();\n      this.showConfirmation = true;\n      setTimeout(() => {\n        this.showConfirmation = false;\n      }, 5000);\n    },\n    onUpdateReset(event) {\n      event.preventDefault();\n      this.$refs.updateTodoModal.hide();\n      this.resetFormUpdate();\n    },\n    deleteTodo(todo) {\n      try {\n        const toDeleteUuid = todo.uuid;\n        if (localStorage.getItem(toDeleteUuid) === null) {\n          throw new ValidationError();\n        }\n        localStorage.removeItem(toDeleteUuid);\n        this.message = 'Задача удалена из списка';\n      } catch (e) {\n        if (e instanceof ValidationError) {\n          console.log(e.name);\n          this.message = 'Произошла ошибка. Задача с таким номером отсутствует}';\n        } else {\n          console.log(e);\n          this.message = 'Произошла ошибка во время удаления задачи';\n        }\n      }\n      this.getTodos();\n      this.showConfirmation = true;\n      setTimeout(() => {\n        this.showConfirmation = false;\n      }, 5000);\n    },\n  },\n  // определяем поведение компонента при загрузке с помощью created\n  components: {\n    confirmation: Confirmation,\n  },\n  created() {\n    this.getTodos();\n  },\n};\n</script>\n\n<style>\nbutton#task-add {\n  margin-top: 20px;\n  margin-bottom: 20px;\n}\nh1, td {\n  text-align: left;\n}\n.todo-uid {\n  text-align: right;\n}\n\n</style>\n"],"sourceRoot":"src/components"}]}